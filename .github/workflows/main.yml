name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Build application
  run: |
    mkdir -p target
    javac -d target src/junit/monprojet/*.java


      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: built-artifacts
          path: target/

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'


          distribution: 'adopt'

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: built-artifacts

      - name: Install JUnit
        run: |
          mkdir -p lib
          curl -O https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.8.2/junit-platform-console-standalone-1.8.2.jar
          mv junit-platform-console-standalone-1.8.2.jar lib/

      - name: Run automated tests
        run: |
          java -jar lib/junit-platform-console-standalone-1.8.2.jar --classpath target --scan-classpath

  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: built-artifacts

      - name: Deploy to production
        run: |
          # Mettez en œuvre les commandes de déploiement appropriées ici
          # Exemple: Utilisez Docker, Ansible, ou transférez simplement les fichiers sur un serveur
          echo "Mettez en œuvre les commandes de déploiement ici"
